stages:
  - build
  - test
  - deploy

build_linux:
  stage: build
  tags:
    - ubuntu2004
    - vrtogether
  except: 
  - /latest/
  variables:
    DEBIAN_FRONTEND: noninteractive
  before_script:
# Install and update debian packages
    - apt-get update
    - apt-get install -y tzdata
    - apt-get install -y software-properties-common
    - apt-get install -y git
    - apt-get install -y cmake
    - apt-get install -y libpcl-dev
    - apt-get install -y libturbojpeg0-dev
# Install Deployment repo and dependencies
    - apt-get install -y python3-pip
    - mkdir deployment-helpers
    - cd deployment-helpers
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/VRTogether_EU/Deployment/Deployment
    - python3 -m pip install -r Deployment/scripts/requirements.txt
    - cd ..
# Get and install cwipc_util
    - if [ "$CI_COMMIT_TAG" = "" ]; then REL_CWIPC_UTIL="--release_name latest"; else REL_CWIPC_UTIL="--release_name $CI_COMMIT_TAG"; fi
    - echo Getting cwipc_util $REL_CWIPC_UTIL
    - python3 deployment-helpers/Deployment/scripts/getReleaseFromGitLab --cicd --project_name cwipc_util $REL_CWIPC_UTIL
    - tar --directory /usr/local -xvf cwipc_util_ubuntu2004_*.tgz
  script:
    - mkdir -p build
    - mkdir -p dist-ubuntu2004
    - cd build
    - cmake ..
    - make
    - make test ARGS=--output-on-failure
    - make install DESTDIR=../dist-ubuntu2004
    - cd ..
    - tar --directory dist-ubuntu2004/usr/local -cvaf cwipc_codec_ubuntu2004_$CI_BUILD_TAG.tgz .
    - touch successful.tmp
  after_script:
    - if [ ! -e successful.tmp -a -e build/Testing/Temporary/LastTest.log ]; then cat build/Testing/Temporary/LastTest.log; fi
  artifacts:
    paths:
      - cwipc_codec_ubuntu2004_$CI_BUILD_TAG.tgz
      
build_osx:
  stage: build
  tags:
  - osx1014
  - vrtogether
  except: 
  - /latest/
  before_script:
    - brew install pkg-config || true # brew upgrade pkg-config
    - brew install cmake || true # brew upgrade cmake
    - brew install jpeg-turbo || true # brew upgrade jpeg-turbo
    - brew unlink jpeg
    - brew link --force jpeg-turbo
    - brew install pcl || true # brew upgrade pcl
# Install Deployment repo and dependencies
    - mkdir deployment-helpers
    - cd deployment-helpers
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/VRTogether_EU/Deployment/Deployment
    - python3 -m pip install -r Deployment/scripts/requirements.txt
    - cd ..
# Get and install cwipc_util
    - if [ "$CI_COMMIT_TAG" = "" ]; then REL_CWIPC_UTIL="--release_name latest"; else REL_CWIPC_UTIL="--release_name $CI_COMMIT_TAG"; fi
    - python3 deployment-helpers/Deployment/scripts/getReleaseFromGitLab --cicd --project_name cwipc_util $REL_CWIPC_UTIL
    - tar --directory /usr/local -xvmf cwipc_util_osx1014_*.tgz
  script:
    - mkdir -p build
    - mkdir -p dist-osx1014
    - cd build
    - cmake ..
    - make
    - make test ARGS=--output-on-failure
    - make install DESTDIR=../dist-osx1014
    - cd ..
    - tar --directory dist-osx1014/usr/local -z -cvf cwipc_codec_osx1014_$CI_BUILD_TAG.tgz .
    - touch successful.tmp
  after_script:
    - if [ ! -e successful.tmp -a -e build/Testing/Temporary/LastTest.log ]; then cat build/Testing/Temporary/LastTest.log; fi
  artifacts:
    paths:
      - cwipc_codec_osx1014_$CI_BUILD_TAG.tgz
      
build_win:
  stage: build
  tags:
    - win10
    - vrtogether
  except: 
  - /latest/
  before_script:
    - rm -rf /cygdrive/c/dist-win/installed
    - mkdir -p /cygdrive/c/dist-win/installed
# Install Deployment repo and dependencies
    - mkdir deployment-helpers
    - cd deployment-helpers
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/VRTogether_EU/Deployment/Deployment
    - python -m pip install -r Deployment/scripts/requirements.txt
    - cd ..
# Get and install cwipc_util
    - if [ "$CI_COMMIT_TAG" = "" ]; then REL_CWIPC_UTIL="--release_name latest"; else REL_CWIPC_UTIL="--release_name $CI_COMMIT_TAG"; fi
    - python deployment-helpers/Deployment/scripts/getReleaseFromGitLab --cicd --project_name cwipc_util $REL_CWIPC_UTIL
    - (zipfile=$PWD/cwipc_util_win1064_*.zip && cd /cygdrive/c/dist-win && unzip $zipfile)
    - (cd /cygdrive/c/dist-win/installed/share/cwipc_util/python && python setup.py install)
  script:
    - mkdir -p build
    - export ziplocation=$(pwd)/cwipc_codec_win1064_$CI_BUILD_TAG.zip
    - export CTEST_OUTPUT_ON_FAILURE=1
    - cd build
    - cmake .. -G "Visual Studio 16 2019" -DCMAKE_INSTALL_PREFIX="C:/dist-win/installed" -DJPEG_Turbo_ROOT="C:/libjpeg-turbo64"
    - cmake --build . --config Release
    - cmake --build . --config Release --target RUN_TESTS
    - find /cygdrive/c/dist-win -type f -print > previously-installed.txt
    - cmake --build . --config Release --target INSTALL
    - rm `cat previously-installed.txt`
    - (cd /cygdrive/c/dist-win && zip -r $ziplocation installed)
    - touch successful.tmp
  after_script:
    - if [ ! -e successful.tmp -a -e build/Testing/Temporary/LastTest.log ]; then cat build/Testing/Temporary/LastTest.log; fi
  artifacts:
    paths:
      - cwipc_codec_win1064_$CI_BUILD_TAG.zip
      
deploy_all:
  stage: deploy
  tags:
    - linux
    - vrtogether
  only: 
    - tags
  except: 
  - /latest/
  dependencies: 
    - build_linux
    - build_osx
    - build_win
  before_script:
  - apt-get update
  - apt-get install -y python3-pip
  - mkdir deployment-helpers
  - cd deployment-helpers
  - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/VRTogether_EU/Deployment/Deployment
  - python3 -m pip install -r Deployment/scripts/requirements.txt
  - cd ..
  script:
    - mkdir deliverables
    - mv cwipc_codec_osx1014_$CI_BUILD_TAG.tgz cwipc_codec_ubuntu2004_$CI_BUILD_TAG.tgz cwipc_codec_win1064_$CI_BUILD_TAG.zip deliverables
    - python3 deployment-helpers/Deployment/scripts/addReleaseToGitLab --cicd --notag  --package_version `deployment-helpers/Deployment/scripts/mkpackageversion.sh` cwipc_codec_osx1014_$CI_BUILD_TAG.tgz cwipc_codec_ubuntu2004_$CI_BUILD_TAG.tgz cwipc_codec_win1064_$CI_BUILD_TAG.zip
      
deploy_all_untagged:
  stage: deploy
  tags:
    - linux
    - vrtogether
  except: 
    - tags
    - /latest/
  dependencies: 
    - build_linux
    - build_osx
    - build_win
  before_script:
  - apt-get update
  - apt-get install -y python3-pip
  - mkdir deployment-helpers
  - cd deployment-helpers
  - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/VRTogether_EU/Deployment/Deployment
  - python3 -m pip install -r Deployment/scripts/requirements.txt
  - cd ..
  script:
    - mkdir deliverables
    - mv cwipc_codec_osx1014_$CI_BUILD_TAG.tgz cwipc_codec_ubuntu2004_$CI_BUILD_TAG.tgz cwipc_codec_win1064_$CI_BUILD_TAG.zip deliverables
    - python3 deployment-helpers/Deployment/scripts/addReleaseToGitLab --cicd --tag_name latest --release_name latest --deleterelease || true
    - python3 deployment-helpers/Deployment/scripts/addReleaseToGitLab --cicd --tag_name latest --release_name latest --deletetag || true
    - python3 deployment-helpers/Deployment/scripts/addReleaseToGitLab --cicd --tag_name latest --release_name latest --branch_to_tag "$CI_COMMIT_REF_NAME" --package_version `deployment-helpers/Deployment/scripts/mkpackageversion.sh` cwipc_codec_osx1014_$CI_BUILD_TAG.tgz cwipc_codec_ubuntu2004_$CI_BUILD_TAG.tgz cwipc_codec_win1064_$CI_BUILD_TAG.zip
